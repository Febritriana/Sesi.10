{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-06-26T10:54:36.300Z",
    "end": "2025-06-26T10:54:41.563Z",
    "duration": 5263,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "c24b8a03-bdc1-40c3-9e89-3b2c6bbcc26a",
      "title": "",
      "fullFile": "D:\\BOOTCAMP\\TEST BOOTCAMP\\tests\\sesi-9.js",
      "file": "\\tests\\sesi-9.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "84469ed4-645b-4686-8f5f-5872b0f7d63f",
          "title": "SauceDemo Automation",
          "fullFile": "D:\\BOOTCAMP\\TEST BOOTCAMP\\tests\\sesi-9.js",
          "file": "\\tests\\sesi-9.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Sukses Login",
              "fullTitle": "SauceDemo Automation Sukses Login",
              "timedOut": false,
              "duration": 4549,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = await new Builder().forBrowser('chrome').build();\nawait driver.get('https://www.saucedemo.com');\nlet inputUsername = await driver.findElement(By.css('[data-test=\"username\"]'))\nlet inputPassword = await driver.findElement(By.xpath('//*[@data-test=\"password\"]'))\nlet buttonLogin = await driver.findElement(By.className('submit-button btn_action'))\nawait inputUsername.sendKeys('standard_user')\nawait inputPassword.sendKeys('secret_sauce')\nawait buttonLogin.click()\nconst pageTitle = await driver.findElement(By.className('title')).getText();\nassert.strictEqual(pageTitle, 'Products');\nawait driver.wait(until.elementLocated(By.className('title')),);\nconst titleText = await driver.findElement(By.className('title')).getText();\nassert.strictEqual(titleText, 'Products');",
              "err": {},
              "uuid": "acaf86ed-409e-456b-a145-191790a03ca7",
              "parentUUID": "84469ed4-645b-4686-8f5f-5872b0f7d63f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Urutkan Produk dari Z ke A",
              "fullTitle": "SauceDemo Automation Urutkan Produk dari Z ke A",
              "timedOut": false,
              "duration": 641,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.wait(until.elementLocated(By.className('product_sort_container')));\n\n await driver.wait(until.elementLocated(By.className('product_sort_container')));\nconst sortDropdown = await driver.findElement(By.className('product_sort_container'));\nawait sortDropdown.sendKeys('Name (Z to A)');\n const productElements = await driver.findElements(By.className('inventory_item_name'));\nconst productNames = [];\nfor (let element of productElements) {\n  const name = await element.getText();\n  productNames.push(name);\n}\nconst sortedNames = [...productNames].sort().reverse();\nassert.deepStrictEqual(productNames, sortedNames);\n  \n await driver.quit();",
              "err": {},
              "uuid": "042dd10b-039d-4f6f-ba36-293ab57b7a33",
              "parentUUID": "84469ed4-645b-4686-8f5f-5872b0f7d63f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "acaf86ed-409e-456b-a145-191790a03ca7",
            "042dd10b-039d-4f6f-ba36-293ab57b7a33"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5190,
          "root": false,
          "rootEmpty": false,
          "_timeout": 60000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 60000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.8.2"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}